name: release-please-release

on:
  push:
    branches:
      - release

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release-please.outputs.release_created }}
      tag_name: ${{ steps.release-please.outputs.tag_name }}
      version: ${{ steps.release-please.outputs.version }}
      pr: ${{ steps.release-please.outputs.pr }}
      # all: ${{ toJSON(steps.release-please.outputs) }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release-please
        with:
          # command: manifest
          token: ${{ secrets.TOKEN }}
          release-type: node
          package-name: release-please-action
          default-branch: release
          changelog-path: "CHANGELOG-RELEASE.md"
      - run: | 
          echo "A release was created."
          echo "release_created: ${{ steps.release-please.outputs.release_created }}"
          echo "html_url: ${{ steps.release-please.outputs.html_url }}"
          echo "tag_name: ${{ steps.release-please.outputs.tag_name }}"
          echo "sha: ${{ steps.release-please.outputs.sha }}"
          echo "body: ${{ steps.release-please.outputs.body }}"

  output-release-please:
    runs-on: ubuntu-latest
    needs: release-please
    # if: ${{ needs.release-please.outputs.release_created }}
    # environment: production
    steps:
      - uses: actions/checkout@v3
      - name: Build production
        run: |
          echo "Building production"
          echo '${{ toJSON(needs.release-please) }}'          

  create-jira-issue:
    runs-on: ubuntu-latest
    needs: release-please
    # if: ${{ needs.release-please.outputs.release_created }}
    # environment: production
    steps:
    # - name: Jira Login
    #   id: login
    #   uses: atlassian/gajira-login@v3
    #   env:
    #     JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
    #     JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
    #     JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}       

    - name: Clone PR branch
      uses: actions/checkout@v2

    - name: Create ticket
      uses: elisa-actions/jira-issue@v1
      with:
        github-token: ${{ secrets.TOKEN }}
        version: "00"
        jira-host: "csaltd.atlassian.net"
        jira-username: ${{ secrets.JIRA_USER_EMAIL }}
        jira-password: ${{ secrets.JIRA_API_TOKEN }}
        title: "Test Issue GitHub Action"
        description: "This is a test ticket created from GitHub Action"
        action: "create-issue"
        link-release: false
        include-author: false
        include-reviews: false

    # - name: Create Jira issue
    #   id: create_jira_issue
    #   uses: atlassian/gajira-create@v3
    #   with:
    #     project: ENIT
    #     issuetype: Task
    #     summary: |
    #        Test Ticket GitHub Action
    #     description: |
    #       This is a test ticket created from GitHub Action 
    #       Created By
    #     fields: | 
    #      '{"labels": ["dashboard"]}'


  # staging:
  #   runs-on: ubuntu-latest
  #   needs: release-please
  #   environment: staging
  #   if: ${{ needs.release-please.outputs.release_created }}
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2
  #   - name: Login to GitLab Container Registry
  #     run: |
  #         echo '${{ toJSON(needs.release-please) }}'
  #   - uses: docker/login-action@v2
  #     with:
  #         registry: registry.gitlab.com
  #         username: ${{ secrets.GITLAB_USERNAME }}
  #         password: ${{ secrets.GITLAB_PASSWORD }}
  #   - name: Build and push staging
  #     uses: docker/build-push-action@v4
  #     with:
  #         context: .
  #         file: staging.Dockerfile
  #         push: true
  #         tags: registry.gitlab.com/cyber-security-associates-ltd/starter-project/staging:${{needs.release-please.outputs.version}},registry.gitlab.com/cyber-security-associates-ltd/starter-project/staging:latest
      # - uses: actions/checkout@v3
      # - name: Build staging
        # run: |
          # echo "Building staging"
          # echo '${{ toJSON(needs.release-please) }}'

  production:
    runs-on: ubuntu-latest
    # needs: staging
    # if: ${{ needs.release-please.outputs.release_created }}
    # environment: production
    steps:
      - uses: actions/checkout@v3
      - name: Build production
        run: |
          echo "Building production"
          echo '${{ toJSON(needs.release-please) }}'

